module-getstart-fin
  div.wrap-module.f.fh
    div.wrap-content
      div.wrap-text.mb60
        item-getstarted-text(each='{item in textContents}', content='{item}')
      div.wrap-button
        atom-button(content='{button}')#testConfirm

  style(scoped, type='less').
    :scope {
      display: block;
      width: 90%;
      margin: 0 auto;
      .wrap-module {
        min-height: 100vh;
        .wrap-content {
          word-break: break-all;
        }
      }
    }

  script.

    // wifkey"KzgrDbXKTFN9unLv2WBYkrMxoUNr2rViHENnugm54hiibysfoCxd"
    // address"n1tmLhtS85WnrEZ5evCmcRcGVronTLFvj1"

    var self = this;

    self.textContents = [
      'Edition of your degital identity will be issued soon.',
    ];

    this.on('mount', function(){
      $('#testConfirm').on('click',function(){
        var callback = function(_data){
          console.log(_data);
          return _data
        }
        Aura.getActivatedAsset('La5VXPZJ3QsWFFMYLu5rCQLEfZ9Z6fuexhhRNF', 'n1tmLhtS85WnrEZ5evCmcRcGVronTLFvj1', callback);
      });
    }); // update

    //this.on('updated', function(){
      /*
      if(Aura.formContents == undefined){
        window.location.href = '#getstarted/module-getstart-wiff';
      }else{
      */
        /* test用
        Aura.formKey = {wif: 'KzgrDbXKTFN9unLv2WBYkrMxoUNr2rViHENnugm54hiibysfoCxd', address: 'n1tmLhtS85WnrEZ5evCmcRcGVronTLFvj1'};
        //Aura.formKey = {wif: 'L2UFNFBVzTaKmK8SkKA5zCGJeyXS84mDDvbHfkK4ub2my1ihdqq3', address: 'n45uPxMzVNxDqAug7QgRyhnRcMatN5jPCV'};

        Aura.formAssetMeta = {name: 'kooh', sex: 'male', nation: 'JP'};
        Aura.txMeta = {where: 'kooh.me', right: 'all', discription: 'test'};

        Aura.assetId = 'La5VXPZJ3QsWFFMYLu5rCQLEfZ9Z6fuexhhRNF';
        */
        
        var asset = {
          issueAddress: Aura.formKey.address,
          amount: 100,
          fee: 3000,
          metadata: {
            assetName: Aura.formAssetMeta.name,        
            issuer: Aura.formAssetMeta.name, 
            description: "The asset of digital identity",
            urls: [
              {name: 'Artist who made Aura',url: 'http://kooh.me/', mimeType: 'text/html', dataHash: '66111ceeed2b7bb977dc2354e870a655a91f2c6909347bf53d3d7918b5743fc'},
            ],
            userData :{
              sex: Aura.formAssetMeta.sex,
              nation: Aura.formAssetMeta.nation,
            }
          }
        };

        Aura.postToApi('issue', asset, function(_data, _body){
          Aura.assetId = _data.assetId;
          var unsignedTx = _data.txHex;
          var signedTx = Aura.signTransaction(unsignedTx, Aura.formKey.wif);
          var transaction = {
            'txHex': signedTx,
          };
          Aura.postToApi('broadcast', transaction, function(_data){
            console.log('comp broadcast');
            console.log(_data);
          
            // ここまでがIssue
            
            /*
            // ユニークなIDをつくる関数
            function getUniqueStr(myStrong){
              var strong = 1000;
              if (myStrong) strong = myStrong;
              return new Date().getTime().toString(16) + Math.floor(strong*Math.random()).toString(16)
            }

            var sendAsset = {
              'from': [Aura.formKey.address],   
              'fee': 3000,
              'to': [{
                'address': Aura.formKey.address,
                'amount': 1, // ここはmetaのamountと常に同じにする
                'assetId': Aura.assetId,
              }],
              //'sendutxo' : [],
              'metadata': {
                'assetId': Aura.assetId,
                'assetName': Aura.formAssetMeta.name,
                'issuer': Aura.formAssetMeta.name,
                'description': 'The asset of digital identity',
                'urls': [{name:'Artist who made Aura', url: 'http://kooh.me/', mimeType: 'image/png', dataHash: ''}],
                'userData': {
                  activationId: getUniqueStr(),
                  'amount': 1, // ここはtoのamountと揃える
                  'additional': {
                    where: Aura.txMeta.where,
                    right: Aura.txMeta.right,
                    discription: Aura.txMeta.discription,
                  },
                },
              },
            }; // sendAsset
            console.log(sendAsset);
            Aura.activateAsset(Aura.assetId, Aura.formKey.address, sendAsset, Aura.formKey.wif);
            */
          }); //broadcast
        }); // issue
      
      
      //} // else if
    //}); // updated

    this.button = {
      label: 'Test',
      //href: '#',
    }